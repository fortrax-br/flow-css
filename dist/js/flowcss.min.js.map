{"version":3,"file":"flowcss.min.js","sources":["../../src/js/src/DOM/selectDomElements.js","../../src/js/src/extends/extendComponent.js","../../src/js/src/alert.js","../../src/js/src/accordion.js","../../src/js/src/carousel.js","../../src/js/index.umd.js"],"sourcesContent":["function selectAllElements(selector = null, documentSelect = document) {\n  if (selector) {\n    const domElements = documentSelect.querySelectorAll(selector);\n\n    return domElements ? domElements : [];\n  }\n  return [];\n}\n\nexport { selectAllElements };\n","const Components = new Map();\nconst FLOW_VERSION = '1.0.0';\n\nclass ExtendComponent {\n  constructor(element, componentKey) {\n    if (!element) {\n      return;\n    }\n\n    this._element = element;\n    this.componentKey = componentKey;\n    Components.set(this._element, this.componentKey);\n  }\n\n  drop() {\n    Components.delete(this._element);\n    this._element = null;\n  }\n\n  getInstance() {\n    return Components.get(this._element);\n  }\n\n  version() {\n    return FLOW_VERSION;\n  }\n}\n\nexport default ExtendComponent;\n","import { selectAllElements } from './DOM/selectDomElements';\nimport ExtendComponent from './extends/extendComponent';\n\nconst DATA_ALERT_HIDE = '[data-flow-hide=\"alert\"]';\nconst CLASS_ALERT = 'alert';\nconst ALERT_EVENT = 'click';\nconst COMPONENT_KEY = 'fw.alert';\n\nclass Alert extends ExtendComponent {\n  constructor(element, componentKey) {\n    super(element, componentKey);\n  } \n\n  _getMainElement(childElement) {\n    return childElement.closest(`.${CLASS_ALERT}`);\n  }\n\n  _destroyDomElement(element) {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  _closeAlert(closeElement) {\n    const mainElement = this._getMainElement(closeElement);\n    this._destroyDomElement(mainElement);\n  }\n\n  execute() {\n    const domElements = selectAllElements(this._element);\n    \n    domElements.forEach(( element ) => {\n      element.addEventListener(ALERT_EVENT, () => this._closeAlert(element), false);\n    });\n  }\n}\n\nwindow.addEventListener('load', () => {\n  new Alert(DATA_ALERT_HIDE, COMPONENT_KEY).execute();\n}, false);\n\nexport default Alert;\n","import ExtendComponent from './extends/extendComponent';\nimport { selectAllElements } from './DOM/selectDomElements';\n\nconst ACCORDION_CLASS = '.accordion';\nconst ACCORDION_BUTTON = '[data-flow-toggle=\"accordion\"]';\nconst ACCORDION_CLASS_SHOW = 'accordion-show';\nconst ACCORDION_BUTTON_CLICKED = 'accordion-clicked';\nconst COMPONENT_KEY = 'fw.accordion';\n\nclass Accordion extends ExtendComponent {\n  constructor(element, componentKey) {\n    super(element, componentKey);\n  }\n\n  _takeTheElementsThatEachButtonRepresents() {\n    const buttons = document.querySelectorAll(ACCORDION_BUTTON);\n\n    const buttonsAndElements = Array.prototype.map.call(buttons, button => {\n      const dataButtonTarget = button.dataset.flowTarget;\n      const element = document.querySelector(dataButtonTarget);\n\n      return {\n        button,\n        element,\n      }\n    });\n\n    return buttonsAndElements;\n  }\n\n  _setClassesInElements(targetButton, targetElement) {\n    const currentElement = document.querySelector(`.${ACCORDION_CLASS_SHOW}`);\n    const currentButton = document.querySelector(`.${ACCORDION_BUTTON_CLICKED}`);\n\n    if (currentElement && currentButton) {\n      currentElement.classList.remove(ACCORDION_CLASS_SHOW);\n      currentButton.classList.remove(ACCORDION_BUTTON_CLICKED);\n    }\n\n    if (!targetElement.classList.contains(ACCORDION_CLASS_SHOW)) {\n        targetElement.classList.add(ACCORDION_CLASS_SHOW);\n        targetButton.classList.add(ACCORDION_BUTTON_CLICKED);\n    }\n  }\n\n  _addEventInButton(button, element) {\n    button.addEventListener('click', () => this._setClassesInElements(button, element), true);\n  }\n\n  execute() {\n    const buttonsAndElements = this._takeTheElementsThatEachButtonRepresents();\n    \n    buttonsAndElements.forEach(item => {\n      this._addEventInButton(item.button, item.element);\n    });\n  }\n}\n\nwindow.addEventListener('load', () => {\n  const accordions = selectAllElements(ACCORDION_CLASS);\n\n  accordions.forEach(accordion => {\n    new Accordion(accordion, COMPONENT_KEY).execute();\n  });\n}, false);\n\nexport default Accordion;\n","import ExtendComponent from './extends/extendComponent';\nimport { selectAllElements } from './DOM/selectDomElements';\n\nconst CAROUSEL = '.carousel';\nconst CAROUSEL_DATA_TARGET = '[data-tw-target=\"carousel\"]';\nconst CAROUSEL_ITEM = '.carousel-item';\nconst CAROUSEL_DOT = '.carousel-dot';\nconst CAROUSEL_CONTROL = '.carousel-control';\nconst CAROUSEL_CONTROL_PREV = '.carousel-control-prev';\nconst CAROUSEL_CONTROL_NEXT = '.carousel-control-next';\nconst COMPONENT_KEY = 'fw.carousel';\nconst SLIDE_DELAY = 2000;\n\nclass Carousel extends ExtendComponent {\n  constructor(element, childElement, componentKey) {\n    super(element, componentKey);\n\n    this._childElement = childElement;\n    this._allSlides = Array.from(this._childElement.children);\n    this._currentSlide = 0;\n    this._isWithControls = Boolean(this._element.dataset.twControls);\n    this._isWithDots = Boolean(this._element.dataset.twDots);\n    this._dotElements = [];\n    this._controlElements = [];\n    this._interval;\n  }\n\n  _moveSlide(targetSlide) {\n    this._allSlides.forEach((slide, index) => {\n      slide.classList.remove('active');\n      this._dotElements[index].classList.remove('active');\n    });\n\n    this._allSlides[targetSlide].classList.add('active');\n    this._dotElements[targetSlide].classList.add('active');\n  }\n\n  _incrementAndMoveSlide(targetSlide) {\n    this._currentSlide = targetSlide;\n    this._moveSlide(targetSlide);\n  }\n\n  _configureDotElements() {\n    this._dotElements = selectAllElements(CAROUSEL_DOT);\n    this._dotElements[0].classList.add('active');\n\n    this._dotElements.forEach((dot, index) => {\n      dot.addEventListener('click', () => this._incrementAndMoveSlide(index));\n    })\n  }\n\n  _configureControlElements() {\n    const controlPrevSlide = selectAllElements(CAROUSEL_CONTROL_PREV);\n    const controlNextSlide = selectAllElements(CAROUSEL_CONTROL_NEXT);\n    \n    controlPrevSlide.forEach((control, index) => {\n      control.addEventListener('click', () => {\n        let prevIndex = this._currentSlide > 0 \n          ? this._currentSlide-1\n          : this._allSlides.length-1;\n\n        this._incrementAndMoveSlide(prevIndex);\n      });\n    });\n\n    controlNextSlide.forEach((control, index) => {\n    if (control.closest(`#${this._element.id}`)) {\n      control.addEventListener('click', () => {\n        let nextIndex = this._currentSlide < this._allSlides.length-1 \n          ? this._currentSlide + 1\n          : 0;\n\n        this._incrementAndMoveSlide(nextIndex);\n      });\n    }});\n  }\n\n  execute() {\n    if (this._isWithDots) {\n      this._configureDotElements();\n    }\n    \n    let interval = setInterval(() => {\n      if (this._currentSlide === this._allSlides.length) {\n        this._currentSlide = 0;\n      }\n      \n      this._moveSlide(this._currentSlide);\n      this._currentSlide+=1;\n    }, SLIDE_DELAY);\n\n\n    if (this._isWithControls) {\n      this._configureControlElements();\n      clearInterval(interval);\n    } \n  }  \n}\n\nwindow.addEventListener('load', () => {\n  const elements = selectAllElements(CAROUSEL);\n  const childElements = selectAllElements(CAROUSEL_DATA_TARGET);\n  \n  elements.forEach((element, index) => {\n    new Carousel(\n      element, \n      childElements[index], \n      COMPONENT_KEY).execute();\n  });\n}, true);\n\nexport default Carousel;\n","import Alert from './src/alert';\nimport Accordion from './src/accordion';\nimport Carousel from './src/carousel';\n\nexport default {\n  Alert,\n  Accordion,\n  Carousel,\n}\n"],"names":["selectAllElements","selector","documentSelect","document","domElements","querySelectorAll","Components","Map","ExtendComponent","element","componentKey","_element","set","this","drop","getInstance","get","version","Alert","_ExtendComponent","_getMainElement","childElement","closest","_destroyDomElement","parentNode","removeChild","_closeAlert","closeElement","mainElement","execute","forEach","addEventListener","_this","window","ACCORDION_CLASS_SHOW","ACCORDION_BUTTON_CLICKED","Accordion","_takeTheElementsThatEachButtonRepresents","buttons","Array","prototype","map","call","button","dataButtonTarget","dataset","flowTarget","querySelector","_setClassesInElements","targetButton","targetElement","currentElement","currentButton","classList","remove","contains","add","_addEventInButton","item","_this2","accordion","Carousel","_childElement","_allSlides","from","children","_currentSlide","_isWithControls","Boolean","twControls","_isWithDots","twDots","_dotElements","_controlElements","_interval","_moveSlide","targetSlide","slide","index","_incrementAndMoveSlide","_configureDotElements","dot","_this3","_configureControlElements","controlPrevSlide","controlNextSlide","control","prevIndex","_this4","length","id","nextIndex","interval","setInterval","_this5","clearInterval","elements","childElements"],"mappings":"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"}