{"version":3,"file":"flowcss.min.js","sources":["../../src/js/src/DOM/selectDomElements.js","../../src/js/src/extends/extendComponent.js","../../src/js/src/alert.js","../../src/js/src/accordion.js","../../src/js/src/carousel.js","../../src/js/index.umd.js"],"sourcesContent":["function selectAllElements(selector = null, documentSelect = document) {\n  if (selector) {\n    const domElements = documentSelect.querySelectorAll(selector);\n\n    return domElements ? domElements : [];\n  }\n  return [];\n}\n\nexport { selectAllElements };\n","const Components = new Map();\nconst FLOW_VERSION = '1.0.0';\n\nclass ExtendComponent {\n  constructor(element, componentKey) {\n    if (!element) {\n      return;\n    }\n\n    this._element = element;\n    this.componentKey = componentKey;\n    Components.set(this._element, this.componentKey);\n  }\n\n  drop() {\n    Components.delete(this._element);\n    this._element = null;\n  }\n\n  getInstance() {\n    return Components.get(this._element);\n  }\n\n  version() {\n    return FLOW_VERSION;\n  }\n}\n\nexport default ExtendComponent;\n","import { selectAllElements } from './DOM/selectDomElements';\nimport ExtendComponent from './extends/extendComponent';\n\nconst DATA_ALERT_HIDE = '[data-flow-hide=\"alert\"]';\nconst CLASS_ALERT = 'alert';\nconst ALERT_EVENT = 'click';\nconst COMPONENT_KEY = 'fw.alert';\n\nclass Alert extends ExtendComponent {\n  constructor(element, componentKey) {\n    super(element, componentKey);\n  } \n\n  _getMainElement(childElement) {\n    return childElement.closest(`.${CLASS_ALERT}`);\n  }\n\n  _destroyDomElement(element) {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n\n  _closeAlert(closeElement) {\n    const mainElement = this._getMainElement(closeElement);\n    this._destroyDomElement(mainElement);\n  }\n\n  execute() {\n    const domElements = selectAllElements(this._element);\n    \n    domElements.forEach(( element ) => {\n      element.addEventListener(ALERT_EVENT, () => this._closeAlert(element), false);\n    });\n  }\n}\n\nwindow.addEventListener('load', () => {\n  new Alert(DATA_ALERT_HIDE, COMPONENT_KEY).execute();\n}, false);\n\nexport default Alert;\n","import ExtendComponent from './extends/extendComponent';\nimport { selectAllElements } from './DOM/selectDomElements';\n\nconst ACCORDION_CLASS = '.accordion';\nconst ACCORDION_BUTTON = '[data-flow-toggle=\"accordion\"]';\nconst ACCORDION_CLASS_SHOW = 'accordion-show';\nconst ACCORDION_BUTTON_CLICKED = 'accordion-clicked';\nconst COMPONENT_KEY = 'fw.accordion';\n\nclass Accordion extends ExtendComponent {\n  constructor(element, componentKey) {\n    super(element, componentKey);\n  }\n\n  _takeTheElementsThatEachButtonRepresents() {\n    const buttons = document.querySelectorAll(ACCORDION_BUTTON);\n\n    const buttonsAndElements = Array.prototype.map.call(buttons, button => {\n      const dataButtonTarget = button.dataset.flowTarget;\n      const element = document.querySelector(dataButtonTarget);\n\n      return {\n        button,\n        element,\n      }\n    });\n\n    return buttonsAndElements;\n  }\n\n  _setClassesInElements(targetButton, targetElement) {\n    const currentElement = document.querySelector(`.${ACCORDION_CLASS_SHOW}`);\n    const currentButton = document.querySelector(`.${ACCORDION_BUTTON_CLICKED}`);\n\n    if (currentElement && currentButton) {\n      currentElement.classList.remove(ACCORDION_CLASS_SHOW);\n      currentButton.classList.remove(ACCORDION_BUTTON_CLICKED);\n    }\n\n    if (!targetElement.classList.contains(ACCORDION_CLASS_SHOW)) {\n        targetElement.classList.add(ACCORDION_CLASS_SHOW);\n        targetButton.classList.add(ACCORDION_BUTTON_CLICKED);\n    }\n  }\n\n  _addEventInButton(button, element) {\n    button.addEventListener('click', () => this._setClassesInElements(button, element), true);\n  }\n\n  execute() {\n    const buttonsAndElements = this._takeTheElementsThatEachButtonRepresents();\n    \n    buttonsAndElements.forEach(item => {\n      this._addEventInButton(item.button, item.element);\n    });\n  }\n}\n\nwindow.addEventListener('load', () => {\n  const accordions = selectAllElements(ACCORDION_CLASS);\n\n  accordions.forEach(accordion => {\n    new Accordion(accordion, COMPONENT_KEY).execute();\n  });\n}, false);\n\nexport default Accordion;\n","import ExtendComponent from './extends/extendComponent';\nimport { selectAllElements } from './DOM/selectDomElements';\n\nconst CAROUSEL_DATA_TYPE = '[data-fw-type=\"carousel\"]';\nconst COMPONENT_KEY = 'fw.carousel';\n\nclass Carousel extends ExtendComponent {\n  constructor(element, componentKey) {\n    super(element, componentKey);\n\n    // initial position is index 1\n    this._slidesAll = Array.from(this._element.children);\n  }\n\n  _getFirstChildrenWidth() {\n    const slide = this._slidesAll[0];\n    const slideWidth = slide.getBoundingClientRect().width;\n\n    return slideWidth;\n  }\n\n  _setPositionInSlideChildrens(slides) {\n    const slideWidth = this._getFirstChildrenWidth();\n\n    for (let index = 0; index < slides.length; index++) {\n      slides[index].style.left = `${slideWidth * index}px`;\n    }\n  }\n\n  _automaticallyMovesSlide(carouselElement) {\n    const currentSlide = carouselElement.querySelector('.active');\n    const nextSlide = currentSlide.nextElementSibling;\n\n    const targetSlide = nextSlide || this._slidesAll[0];\n\n    this._moveSlide(carouselElement, currentSlide, targetSlide);\n    this._toggleClassActiveSlide(currentSlide, targetSlide);\n  }\n\n  _moveSlide(carousel, currentSlide, targetSlide) {\n    const positionToSlide = targetSlide.style.left;\n    carousel.parentNode.removeChild(currentSlide);\n      carousel.style.transform = `translateX(-100%)`;\n  }\n\n  _toggleClassActiveSlide(currentActive, newActive) {\n    currentActive.classList.remove('active');\n    newActive.classList.add('active');\n  }\n\n  execute() { \n    this._setPositionInSlideChildrens(this._slidesAll);\n\n    setInterval(() => {\n      this._automaticallyMovesSlide(this._element);\n    }, 2000);\n  }\n}\n\nwindow.addEventListener('load', () => {\n  const elements = selectAllElements(CAROUSEL_DATA_TYPE);\n  \n  elements.forEach(element => new Carousel(element, COMPONENT_KEY).execute());\n}, true);\n\nexport default Carousel;\n","import Alert from './src/alert';\nimport Accordion from './src/accordion';\nimport Carousel from './src/carousel';\n\nexport default {\n  Alert,\n  Accordion,\n  Carousel,\n}\n"],"names":["selectAllElements","selector","documentSelect","document","domElements","querySelectorAll","Components","Map","ExtendComponent","element","componentKey","_element","set","this","drop","getInstance","get","version","Alert","_ExtendComponent","_getMainElement","childElement","closest","_destroyDomElement","parentNode","removeChild","_closeAlert","closeElement","mainElement","execute","forEach","addEventListener","_this","window","ACCORDION_CLASS_SHOW","ACCORDION_BUTTON_CLICKED","Accordion","_takeTheElementsThatEachButtonRepresents","buttons","Array","prototype","map","call","button","dataButtonTarget","dataset","flowTarget","querySelector","_setClassesInElements","targetButton","targetElement","currentElement","currentButton","classList","remove","contains","add","_addEventInButton","item","_this2","accordion","Carousel","_slidesAll","from","children","_getFirstChildrenWidth","getBoundingClientRect","width","_setPositionInSlideChildrens","slides","slideWidth","index","length","style","left","_automaticallyMovesSlide","carouselElement","currentSlide","targetSlide","nextElementSibling","_moveSlide","_toggleClassActiveSlide","carousel","transform","currentActive","newActive","setInterval"],"mappings":"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"}